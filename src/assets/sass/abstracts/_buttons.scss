@import "../abstracts/colors";

$types: primary, secondary, primary-ghost, destructive;
$sizes: small, normal, big;

/******************************/
/*       Color mapping        */
/******************************/
$btn_box-shadow: $color-BAF01;

$btn-page-indicator_background: $color-BL;
$btn-page-indicator_color: $color-GBC02;
$btn-page-indicator_box-shadow: $color-GBC02;
$btn-page-indicator_hover_background: $color-BA;
$btn-page-indicator_hover_color: $color-BL;
$btn-page-indicator_hover_box-shadow: $color-BAF01;
$btn-page-indicator_btn-selected_background: $color-VE;
$btn-page-indicator_btn-selected_color: $color-BL;
$btn-page-indicator_btn-selected_box-shadow: $color-VE;

$btn-primary_background: $color-BA;
$btn-primary_color: $color-BL;
$btn-primary_hover_background: $color-BAF01;
$btn-primary_disabled_background: $color-GBC02;
$btn-primary_disabled_box-shadow: $color-GBC02;

$btn-secondary_background: $color-BL;
$btn-secondary_color: $color-BA;
$btn-secondary_box-shadow: $color-BA;
$btn-secondary_hover_background: $color-BL;
$btn-secondary_hover_color: $color-BAF01;
$btn-secondary_hover_box-shadow: $color-BAF01;
$btn-secondary_disabled_background: $color-BL;
$btn-secondary_disabled_color: $color-GBC02;
$btn-secondary_disabled_box-shadow: $color-GBC02;

$btn-primary-ghost_background: transparent;
$btn-primary-ghost_color: $color-BL;
$btn-primary-ghost_box-shadow: $color-BL;
$btn-primary-ghost_hover_background: $color-BL;
$btn-primary-ghost_hover_color: $color-BAF01;
$btn-primary-ghost_hover_box-shadow: $color-BAF01;
$btn-primary-ghost_disabled_background: $color-GBC02;
$btn-primary-ghost_disabled_color: $color-BL;
$btn-primary-ghost_disabled_box-shadow: $color-GBC02;

$btn-destructive_background: $color-VER;
$btn-destructive_color: $color-BL;
$btn-destructive_box-shadow: $color-VERF01;
$btn-destructive_hover_background: $color-VERF01;
$btn-destructive_hover_color: $color-BL;
$btn-destructive_hover_box-shadow: $color-VERF01;
$btn-destructive_disabled_background: $color-GBC02;
$btn-destructive_disabled_color: $color-BL;
$btn-destructive_disabled_box-shadow: $color-GBC02;

/******************************/
/*            Root            */
/******************************/
.btn {
    display: flex;
    flex-direction: row;
    align-items: center;
    border-radius: 5px;
    border: none;
    box-shadow: inset 0 0 0 1px $btn_box-shadow; // this + border:none = inner border
    font-family: inherit;
}

/******************************/
/*          Content           */
/******************************/
@mixin btn-icon-left($size, $margin) {
    mat-icon {
        width: $size;
        height: $size;
        margin-right: $margin;
    }
}

@mixin btn-icon-right($size, $margin) {
    mat-icon {
        width: $size;
        height: $size;
        margin-left: $margin;
    }
}

@mixin btn-icon-only($size, $radius, $padding) {
    border-radius: $radius;
    padding: $padding;
    mat-icon {
        width: $size;
        height: $size;
    }
}

@mixin btn-page-indicator($radius, $padding) {
    border-radius: $radius;
    padding: $padding;

    background: $btn-page-indicator_background;
    color: $btn-page-indicator_color;
    border: none;
    box-shadow: inset 0 0 0 1px $btn-page-indicator_box-shadow;
    &:hover,
    &:focus {
        background: $btn-page-indicator_hover_background;
        color: $btn-page-indicator_hover_color;
        box-shadow: inset 0 0 0 1px $btn-page-indicator_hover_box-shadow;
        cursor: pointer;
        outline: none; // prevent default outline from user agent stylesheet
    }
    &.btn-selected {
        background: $btn-page-indicator_btn-selected_background;
        color: $btn-page-indicator_btn-selected_color;
        border: none;
        box-shadow: inset 0 0 0 1px $btn-page-indicator_btn-selected_box-shadow;
    }
}

/******************************/
/*            Type            */
/******************************/
@each $type in $types {
    .btn-#{$type} {
        @if $type == primary {
            background: $btn-primary_background;
            color: $btn-primary_color;
            &:hover,
            &:focus {
                background: $btn-primary_hover_background;
                cursor: pointer;
                outline: none; // prevent default outline from user agent stylesheet
            }
            &:disabled {
                background: $btn-primary_disabled_background;
                border: none;
                box-shadow: inset 0 0 0 1px $btn-primary_disabled_box-shadow;
            }
        } @else if $type == secondary {
            background: $btn-secondary_background;
            color: $btn-secondary_color;
            box-shadow: inset 0 0 0 1px $btn-secondary_box-shadow;
            &:hover,
            &:focus {
                background: $btn-secondary_hover_background;
                color: $btn-secondary_hover_color;
                box-shadow: inset 0 0 0 1px $btn-secondary_hover_box-shadow;
                cursor: pointer;
                outline: none; // prevent default outline from user agent stylesheet
            }
            &:disabled {
                background: $btn-secondary_disabled_background;
                color: $btn-secondary_disabled_color;
                border: none;
                box-shadow: inset 0 0 0 1px $btn-secondary_disabled_box-shadow;
            }
        } @else if $type == primary-ghost {
            background: $btn-primary-ghost_background;
            color: $btn-primary-ghost_color;
            box-shadow: inset 0 0 0 1px $btn-primary-ghost_box-shadow;
            &:hover,
            &:focus {
                background: $btn-primary-ghost_hover_background;
                color: $btn-primary-ghost_hover_color;
                box-shadow: inset 0 0 0 1px $btn-primary-ghost_hover_box-shadow;
                cursor: pointer;
                outline: none; // prevent default outline from user agent stylesheet
            }
            &:disabled {
                background: $btn-primary-ghost_disabled_background;
                color: $btn-primary-ghost_disabled_color;
                border: none;
                box-shadow: inset 0 0 0 1px $btn-primary-ghost_disabled_box-shadow;
            }
        } @else if $type == destructive {
            background: $btn-destructive_background;
            color: $btn-destructive_color;
            box-shadow: inset 0 0 0 1px $btn-destructive_box-shadow;
            &:hover,
            &:focus {
                background: $btn-destructive_hover_background;
                color: $btn-destructive_hover_color;
                box-shadow: inset 0 0 0 1px $btn-destructive_hover_box-shadow;
                cursor: pointer;
                outline: none; // prevent default outline from user agent stylesheet
            }
            &:disabled {
                background: $btn-destructive_disabled_background;
                color: $btn-destructive_disabled_color;
                border: none;
                box-shadow: inset 0 0 0 1px $btn-destructive_disabled_box-shadow;
            }
        } @else {
            @error "Type not known #{$type}";
        }
    }
}

/******************************/
/*            Size            */
/******************************/
@each $size in $sizes {
    .btn-#{$size} {
        @if $size == normal {
            font-size: 16px;
            line-height: 18px;
            padding: 15px 24px 15px 24px;
            &.btn-icon-left {
                @include btn-icon-left(18px, 16px);
            }
            &.btn-icon-right {
                @include btn-icon-right(18px, 16px);
            }
            &.btn-icon-only {
                @include btn-icon-only(18px, 40px, 15px);
            }
            &.btn-page-indicator {
                @include btn-page-indicator(40px, 15px);
            }
        } @else if $size == big {
            font-size: 20px;
            line-height: 24px;
            padding: 20px 32px 20px 32px;
            &.btn-icon-left {
                @include btn-icon-left(24px, 16px);
            }
            &.btn-icon-right {
                @include btn-icon-right(24px, 16px);
            }
            &.btn-icon-only {
                @include btn-icon-only(24px, 40px, 20px);
            }
            &.btn-page-indicator {
                @include btn-page-indicator(40px, 20px);
            }
        } @else if $size == small {
            font-size: 14px;
            line-height: 16px;
            padding: 12px;
            &.btn-icon-left {
                @include btn-icon-left(16px, 8px);
            }
            &.btn-icon-right {
                @include btn-icon-right(16px, 8px);
            }
            &.btn-icon-only {
                @include btn-icon-only(16px, 40px, 12px);
            }
            &.btn-page-indicator {
                @include btn-page-indicator(40px, 12px);
            }
        } @else {
            @error "Size not known #{$size}";
        }
    }
}
